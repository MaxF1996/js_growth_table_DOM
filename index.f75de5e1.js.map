{"mappings":"AAAA;AAEA,kBAAkB;AAElB,MAAM,YAAY,SAAS,aAAa,CAAC;AAEzC,SAAS,gBAAgB,KAAK;IAC5B,MAAM,YAAY,SAAS,aAAa,CAAC;IACzC,MAAM,eAAe,SAAS,aAAa,CAAC;IAC5C,MAAM,eAAe,SAAS,aAAa,CAAC;IAC5C,MAAM,kBAAkB,SAAS,aAAa,CAAC;IAC/C,MAAM,kBAAkB;IACxB,MAAM,kBAAkB;IAExB,IAAI,kBAAkB,MAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM;IAChD,IAAI,qBAAqB,MAAM,IAAI,CAAC,MAAM;IAE1C,UAAU,gBAAgB,CAAC,SAAS;QAClC,IAAI,sBAAsB,iBACxB;QAGF,MAAM,SAAS,MAAM,SAAS;QAE9B,IAAK,IAAI,IAAI,GAAG,IAAI,iBAAiB,IACnC,OAAO,UAAU;QAGnB;QAEA,IAAI,sBAAsB,iBACxB,UAAU,QAAQ,GAAG;QAGvB,IAAI,qBAAqB,iBACvB,aAAa,QAAQ,GAAG;IAE5B;IAEA,aAAa,gBAAgB,CAAC,SAAS;QACrC,IAAI,sBAAsB,iBACxB;QAGF,MAAM,SAAS,CAAC;QAChB;QAEA,IAAI,sBAAsB,iBACxB,aAAa,QAAQ,GAAG;QAG1B,IAAI,qBAAqB,iBACvB,UAAU,QAAQ,GAAG;IAEzB;IAEA,aAAa,gBAAgB,CAAC,SAAS;QACrC,IAAI,mBAAmB,iBACrB;QAGF;QAEA,MAAM,UAAU,MAAM,IAAI;QAE1B,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,MAAM,EAAE,IAClC,OAAO,CAAC,EAAE,CAAC,UAAU;QAGvB,IAAI,mBAAmB,iBACrB,aAAa,QAAQ,GAAG;QAG1B,IAAI,kBAAkB,iBACpB,gBAAgB,QAAQ,GAAG;IAE/B;IAEA,gBAAgB,gBAAgB,CAAC,SAAS;QACxC,IAAI,mBAAmB,iBACrB;QAGF;QAEA,MAAM,UAAU,MAAM,IAAI;QAE1B,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,MAAM,EAAE,IAClC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC;QAGxB,IAAI,mBAAmB,iBACrB,gBAAgB,QAAQ,GAAG;QAG7B,IAAI,kBAAkB,iBACpB,aAAa,QAAQ,GAAG;IAE5B;AACF;AAEA,gBAAgB","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\n// write code here\n\nconst pageTable = document.querySelector('.field');\n\nfunction handleTableSize(table) {\n  const rowAddBtn = document.querySelector('.append-row');\n  const rowRemoveBtn = document.querySelector('.remove-row');\n  const columnAddBtn = document.querySelector('.append-column');\n  const columnRemoveBtn = document.querySelector('.remove-column');\n  const minCountOfCells = 2;\n  const maxCountOfCells = 10;\n\n  let countOfRowCells = table.rows[0].cells.length;\n  let countOfColumnCells = table.rows.length;\n\n  rowAddBtn.addEventListener('click', () => {\n    if (countOfColumnCells >= maxCountOfCells) {\n      return;\n    }\n\n    const newRow = table.insertRow();\n\n    for (let i = 0; i < countOfRowCells; i++) {\n      newRow.insertCell();\n    }\n\n    countOfColumnCells++;\n\n    if (countOfColumnCells >= maxCountOfCells) {\n      rowAddBtn.disabled = true;\n    }\n\n    if (countOfColumnCells > minCountOfCells) {\n      rowRemoveBtn.disabled = false;\n    }\n  });\n\n  rowRemoveBtn.addEventListener('click', () => {\n    if (countOfColumnCells <= minCountOfCells) {\n      return;\n    }\n\n    table.deleteRow(-1);\n    countOfColumnCells--;\n\n    if (countOfColumnCells <= minCountOfCells) {\n      rowRemoveBtn.disabled = true;\n    }\n\n    if (countOfColumnCells > minCountOfCells) {\n      rowAddBtn.disabled = false;\n    }\n  });\n\n  columnAddBtn.addEventListener('click', () => {\n    if (countOfRowCells >= maxCountOfCells) {\n      return;\n    }\n\n    countOfRowCells++;\n\n    const allRows = table.rows;\n\n    for (let i = 0; i < allRows.length; i++) {\n      allRows[i].insertCell();\n    }\n\n    if (countOfRowCells >= maxCountOfCells) {\n      columnAddBtn.disabled = true;\n    }\n\n    if (countOfRowCells > minCountOfCells) {\n      columnRemoveBtn.disabled = false;\n    }\n  });\n\n  columnRemoveBtn.addEventListener('click', () => {\n    if (countOfRowCells <= minCountOfCells) {\n      return;\n    }\n\n    countOfRowCells--;\n\n    const allRows = table.rows;\n\n    for (let i = 0; i < allRows.length; i++) {\n      allRows[i].deleteCell(-1);\n    }\n\n    if (countOfRowCells <= minCountOfCells) {\n      columnRemoveBtn.disabled = true;\n    }\n\n    if (countOfRowCells > minCountOfCells) {\n      columnAddBtn.disabled = false;\n    }\n  });\n}\n\nhandleTableSize(pageTable);\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}